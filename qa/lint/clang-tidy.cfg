Checks: '
  *,
  -abseil-string-find-str-contains,             # string::contains is in c++23, clang++ is c++20
  -altera-id-dependent-backward-branch,         # not understood
  -altera-struct-pack-align,                    #
  -altera-unroll-loops,                         #
  -bugprone-easily-swappable-parameters,        #
  -cert-err34-c,                                # todo
  -cppcoreguidelines-avoid-magic-numbers,              # todo
  -cppcoreguidelines-avoid-non-const-global-variables, # certain mutable global variables ok
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,    # that would be nice
  -cppcoreguidelines-pro-type-vararg,           # needed for print functions
  -fuchsia-default-arguments-calls,             # default arguments ok
  -fuchsia-default-arguments-declarations,      # -- " --
  -fuchsia-overloaded-operator,                 # in some cases ok
  -fuchsia-statically-constructed-objects,      # static objects ok
  -fuchsia-trailing-return,                     # auto f()->int is ok
  -google-readability-casting,                  # size_t(n) type casts are readable
  -hicpp-vararg,                                # needed for print statements
  -llvm-header-guard,                           # does not recognize "#pragma once"
  -llvmlibc-callee-namespace,                   # not understood
  -llvmlibc-implementation-in-namespace,        # not understood
  -llvmlibc-restrict-system-libc-headers,       # cannot compile without those headers
  -misc-non-private-member-variables-in-classes,# public members ok
  -readability-identifier-length,               # short identifiers oks
  -readability-implicit-bool-conversion,        # if(someptr) etc is readable and terse
  -readability-magic-numbers,                   # todo
  -misc-no-recursion,                           # allow recursion
  -google-build-using-namespace,                # allow using namespace
  -cppcoreguidelines-owning-memory,             # allow new in place
  -cppcoreguidelines-pro-type-union-access,     # allow access to glm unions
  -hicpp-uppercase-literal-suffix,              # allow 0.0f instead of 0.0F
  -readability-uppercase-literal-suffix,        # -- " --
  -cert-msc32-c,                                # allow random number seed
  -cert-msc51-cpp,                              # -- " --
  -cppcoreguidelines-non-private-member-variables-in-classes, # allow public members
  -cppcoreguidelines-pro-type-cstyle-cast,      # allow c style cast
  -cert-err33-c,                                # allow unused return from functions
  -cppcoreguidelines-pro-type-reinterpret-cast, # allow pointer shenanigans
  -modernize-use-nodiscard,                     # allow for now
  -misc-use-anonymous-namespace,                # todo: not understood
  -cert-err58-cpp,                              # allow static init that throws
  -cppcoreguidelines-pro-bounds-constant-array-index, # allow array subscript
  -readability-function-cognitive-complexity,   # allow complex functions
  -cppcoreguidelines-special-member-functions,  # allow destructor without
  -hicpp-special-member-functions,              #   declaring special member functions
  -performance-no-int-to-ptr,                   # allow int to pointer (opengl api)
  -cppcoreguidelines-no-malloc,                 # allow malloc (o1store)
  -hicpp-no-malloc,                             # -- " --
  -cppcoreguidelines-avoid-c-arrays,            # allow c arrays
  -hicpp-avoid-c-arrays,                        # -- " --
  -modernize-avoid-c-arrays,                    # -- " --
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay, # allow arrays as pointers
  -hicpp-no-array-decay,                        # -- " --
  -llvm-header-guard,                           # using #pragma once
  -google-build-using-namespace,                # allow using namespace
  -cppcoreguidelines-avoid-non-const-global-variables, # global variables ok
  -misc-include-cleaner                         # included through include ok
'
